  자바스크립트에서 제공하는 변수형에는 6가지가있다.{
참 거짓을 구별하는 boolean;
의도적으로 빈 값을 넣고 싶을때는 null;
아예 값이 지정되지 않았다면 undefined;
숫자라면 number;
문자열이라면 string;
여러개의 변수를 묶어서 관리한다면 object;
}

  산술 연산은 괄호를 써서 연산하는 편이 좋다.
  앞에 문자열과 연산될 경우 숫자가 문자열로 변환되어 엉뚱한 값으로 연산될 수 있기 때문이다.
  
  for, while의 의미적 차이
  for는 반복해야 할 횟수가 정해져 있을때 쓴다.
  while 은 반복해야할 횟수가 명확하지 않을 때 쓴다. + 어떤 특정한 상황이 아닌 경우에만 실행하고 싶을때 쓴다.
  while의 경우를 예로 들면 게임오버가 되지 않은 상태는 횟수가 정해져 있지 않으므로 조건을 만족할때까지 반복되도록 반복문을 짜야한다.
  
  자바스크립트는 숫자와 문자열을 비교할 때, 문자열을 숫자로 먼저 변환한다 
  1=='1' true.
  but 1==='1' false. => 값의 형태까지 비교하기 때문에 false.
  
  유효성 검사를 꼭 하자! 잘 만든 프로그램이라도 입력이 쓰레기라면 출력값도 쓰레기가 나올 수밖에 없다.
  
  대문자와 '_'만으로 이루어진 변수는 관습적으로 상수로 생각되는 것 같다. 
  
  else 에는 조건을 넣지 않음-주의할것!
  
  switch(변수1){
  case 1 :
  asdf
  break;
  };
  
  switch 문엥서 하나의 조건이 맞으면 그 이후의 코드 모두 실행 
  = break 문으로 탈출해야 조건에 맞는 소스만 실행 가능.
  
  함수.
  
  함수의 필수요소: 이름, 인자, 리턴값 = 인터페이스 라고 한다.
  
  함수 호출시 () 괄호를 꼭 붙이자.
  
  함수, 함수()의 차이는 전자는 함수자체를 나타내는것, 후자는 아무인자없이 함수를 호출했을 때 리턴되는 결과 값을 나타냄.
  
  refactoring:외부 동작을 바꾸지 않으면서 내부의 구현을 개선하는 작업. 
  ex) 빠르게 만들기 위한 코드 최적화, 잘못된 의미의 변수명 수정 등의 점진적 개선 방법.
  중요한 것은 외부의 동작을 바꾸지 않아야 한다는 것과 점진적으로 개선해 나가야한다는 것.
  
  style css요소 연결시 <link rel = "stylesheet" href = "css경로" />
  
  sort() 모든 요소를 문자열로 변환뒤에 유니코드로 코드를 비교한다. 
  -때문에 10과 2의 비교시 첫째자리인 1과 2가 비교되어 2가 더 높은 순위로 비교된다.
  따라서 이런경우 비교함수를 인자에 넣어야 제대로된 비교를 할 수 있다.
  ex) function(){
  return a-b;
  }
  -값이 나오면 작다는의미, +값이 나오면 크다는 의미로 sort가 인자로 받아들이게 된다. 
  
  
  
  
